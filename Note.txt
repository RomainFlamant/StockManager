Gestion des stocks

Table =

Produit  1,N
         0,N  SousCategorie   1,1
                              1,N   Categorie
                              
Utilisateur   1,N
              0,N    Rôle
              
              
Contexte : Société d'import export

Produit -> categorie
Client -> Pro
       -> Particulier
Fournisseur
Employés --> utilisateur de l'application
Commande
FactureSupplier


Objectif : outils qui gere ses stock
commande et fournisseur
des qu'un produit atteint un stock limite  declencher une alerte
produit supérieur à une certain quantité __> alert
nbr de comande
chiffre d'affaire par catégorie et produit
facture client et facture fournisseur.

contrainte : 
hibernate SpringMVC


Script creation table


DROP TABLE IF EXISTS Product ; CREATE TABLE Product (IdProduct BIGINT  AUTO_INCREMENT NOT NULL, NameProduct TEXT, DescriptifProduct TEXT, PriceProduct FLOAT, MaxStockProduct INT, MinStockProduct INT, StockProduct INT, IdCategory BIGINT NOT NULL, IdSupplier BIGINT NOT NULL, PRIMARY KEY (IdProduct) ) ENGINE=InnoDB;  DROP TABLE IF EXISTS Category ; CREATE TABLE Category (IdCategory BIGINT  AUTO_INCREMENT NOT NULL, NameCategory TEXT, DescriptionCategory TEXT, PRIMARY KEY (IdCategory) ) ENGINE=InnoDB;  DROP TABLE IF EXISTS Customer ; CREATE TABLE Customer (IdCustomer BIGINT  AUTO_INCREMENT NOT NULL, NameCustomer BIGINT, SiretCustomer TEXT, TypeCustomer TEXT, AdressCustomer TEXT, VilleCustomer TEXT, CPCustomer BIGINT, PRIMARY KEY (IdCustomer) ) ENGINE=InnoDB;  DROP TABLE IF EXISTS Employee ; CREATE TABLE Employee (IdEmployee BIGINT  AUTO_INCREMENT NOT NULL, NameEmployee TEXT, FirstNameEmployee TEXT, EmailEmployee TEXT, MdpEmployee TEXT, IsActive INT, PRIMARY KEY (IdEmployee) ) ENGINE=InnoDB;  DROP TABLE IF EXISTS Supplier ; CREATE TABLE Supplier (IdSupplier BIGINT  AUTO_INCREMENT NOT NULL, NameSupplier TEXT, SiretSupplier TEXT, AddressSupplier TEXT, VilleSupplier TEXT, CPSupplier BIGINT, PRIMARY KEY (IdSupplier) ) ENGINE=InnoDB;  DROP TABLE IF EXISTS Orders ; CREATE TABLE Orders (NumOrder BIGINT  AUTO_INCREMENT NOT NULL, QuantityOrder BIGINT, DateOrders DATETIME, IdCustomer BIGINT NOT NULL, IdProduct BIGINT NOT NULL, IdEmployee BIGINT NOT NULL, PRIMARY KEY (NumOrder) ) ENGINE=InnoDB;  DROP TABLE IF EXISTS Invoice ; CREATE TABLE Invoice (NumInvoice BIGINT  AUTO_INCREMENT NOT NULL, QuantityInvoice BIGINT, DateInvoice DATETIME, IdProduct BIGINT NOT NULL, IdEmployee BIGINT NOT NULL, IdSupplier BIGINT NOT NULL, PRIMARY KEY (NumInvoice) ) ENGINE=InnoDB;  ALTER TABLE Product ADD CONSTRAINT FK_Product_IdCategory FOREIGN KEY (IdCategory) REFERENCES Category (IdCategory); ALTER TABLE Product ADD CONSTRAINT FK_Product_IdSupplier FOREIGN KEY (IdSupplier) REFERENCES Supplier (IdSupplier); ALTER TABLE Orders ADD CONSTRAINT FK_Orders_IdCustomer FOREIGN KEY (IdCustomer) REFERENCES Customer (IdCustomer); ALTER TABLE Orders ADD CONSTRAINT FK_Orders_IdProduct FOREIGN KEY (IdProduct) REFERENCES Product (IdProduct); ALTER TABLE Orders ADD CONSTRAINT FK_Orders_IdEmployee FOREIGN KEY (IdEmployee) REFERENCES Employee (IdEmployee); ALTER TABLE Invoice ADD CONSTRAINT FK_Invoice_IdProduct FOREIGN KEY (IdProduct) REFERENCES Product (IdProduct); ALTER TABLE Invoice ADD CONSTRAINT FK_Invoice_IdEmployee FOREIGN KEY (IdEmployee) REFERENCES Employee (IdEmployee); ALTER TABLE Invoice ADD CONSTRAINT FK_Invoice_IdSupplier FOREIGN KEY (IdSupplier) REFERENCES Supplier (IdSupplier); 
