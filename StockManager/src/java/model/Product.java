package model;
// Generated 5 mars 2015 20:30:42 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name="product"
    ,catalog="stockmanager2"
)
public class Product extends Metier implements java.io.Serializable {


     private Long idProduct;
     private Category category;
     private Supplier supplier;
     private String nameProduct;
     private String descriptifProduct;
     private Float priceProduct;
     private Integer maxStockProduct;
     private Integer minStockProduct;
     private Integer stockProduct;
     private  Set<Orderproduct> orderproducts = new HashSet(0);
     private Set<Invoice> invoices = new HashSet(0);

    public Product() {
    }

	
    public Product(Category category, Supplier supplier) {
        this.category = category;
        this.supplier = supplier;
    }
    public Product(Category category, Supplier supplier, String nameProduct, String descriptifProduct, Float priceProduct, Integer maxStockProduct, Integer minStockProduct, Integer stockProduct,  Set<Orderproduct> orderproducts, Set<Invoice> invoices) {
       this.category = category;
       this.supplier = supplier;
       this.nameProduct = nameProduct;
       this.descriptifProduct = descriptifProduct;
       this.priceProduct = priceProduct;
       this.maxStockProduct = maxStockProduct;
       this.minStockProduct = minStockProduct;
       this.stockProduct = stockProduct;
       this.orderproducts = orderproducts;
       this.invoices = invoices;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="IdProduct", unique=true, nullable=false)
    public Long getIdProduct() {
        return this.idProduct;
    }
    
    public void setIdProduct(Long idProduct) {
        this.idProduct = idProduct;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="IdCategory", nullable=false)
    public Category getCategory() {
        return this.category;
    }
    
    public void setCategory(Category category) {
        this.category = category;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="IdSupplier", nullable=false)
    public Supplier getSupplier() {
        return this.supplier;
    }
    
    public void setSupplier(Supplier supplier) {
        this.supplier = supplier;
    }

    
    @Column(name="NameProduct", length=65535)
    public String getNameProduct() {
        return this.nameProduct;
    }
    
    public void setNameProduct(String nameProduct) {
        this.nameProduct = nameProduct;
    }

    
    @Column(name="DescriptifProduct", length=65535)
    public String getDescriptifProduct() {
        return this.descriptifProduct;
    }
    
    public void setDescriptifProduct(String descriptifProduct) {
        this.descriptifProduct = descriptifProduct;
    }

    
    @Column(name="PriceProduct", precision=12, scale=0)
    public Float getPriceProduct() {
        return this.priceProduct;
    }
    
    public void setPriceProduct(Float priceProduct) {
        this.priceProduct = priceProduct;
    }

    
    @Column(name="MaxStockProduct")
    public Integer getMaxStockProduct() {
        return this.maxStockProduct;
    }
    
    public void setMaxStockProduct(Integer maxStockProduct) {
        this.maxStockProduct = maxStockProduct;
    }

    
    @Column(name="MinStockProduct")
    public Integer getMinStockProduct() {
        return this.minStockProduct;
    }
    
    public void setMinStockProduct(Integer minStockProduct) {
        this.minStockProduct = minStockProduct;
    }

    
    @Column(name="StockProduct")
    public Integer getStockProduct() {
        return this.stockProduct;
    }
    
    public void setStockProduct(Integer stockProduct) {
        this.stockProduct = stockProduct;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public  Set<Orderproduct> getOrderproducts() {
        return this.orderproducts;
    }
    
    public void setOrderproducts( Set<Orderproduct> orderproducts) {
        this.orderproducts = orderproducts;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<Invoice> getInvoices() {
        return this.invoices;
    }
    
    public void setInvoices(Set<Invoice> invoices) {
        this.invoices = invoices;
    }




}


